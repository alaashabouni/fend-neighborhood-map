{"ast":null,"code":"import _objectSpread from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/src/components/MapDisplay.js\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport MapNotDisplayed from './MapNotDisplayed';\nvar MAP_KEY = \"AIzaSyBi7tDyVzA7Ncf1kk-wCYxJrqDXd0qHUNs\";\nvar FS_CLIENT = \"430UINZRHZVRKNN3SUYH3TCKBNBFJTVJ2CDOCUGRETGYHWH\";\nvar FS_SECRET = \"MEL51JWGKO054COM0GQBLQ2RK1DJPNLUIPK5A4GH1CZCAWO2\";\nvar FS_VERSION = \"20180323\";\n\nvar MapDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapDisplay, _Component);\n\n  function MapDisplay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapDisplay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      map: null,\n      markers: [],\n      markerProps: [],\n      activeMarker: null,\n      activeMarkerProps: null,\n      showingInfoWindow: false\n    };\n\n    _this.componentDidMount = function () {};\n\n    _this.componentWillReceiveProps = function (props) {\n      //only one initial marker drop\n      _this.setState({\n        firstDrop: false\n      }); //change number of markers on map based on number of locations\n\n\n      if (_this.state.markers.length !== props.locations.length) {\n        _this.closeInfoWindow();\n\n        _this.updateMarkers(props.locations);\n\n        _this.setState({\n          activeMarker: null\n        });\n\n        return;\n      } //close info window for no active marker\n\n\n      if (!props.selectedIndex || _this.state.activeMarker && _this.state.markers[props.selectedIndex] !== _this.state.activeMarker) {\n        _this.closeInfoWindow();\n      } //check for selected index\n\n\n      if (props.selectedIndex === null || typeof props.selectedIndex === \"undefined\") {\n        return;\n      }\n\n      ;\n\n      _this.onMarkerClick(_this.state.markerProps[props.selectedIndex], _this.state.markers[props.selectedIndex]);\n    };\n\n    _this.mapReady = function (props, map) {\n      // prep location markers\n      _this.setState({\n        map: map\n      });\n\n      _this.updateMarkers(_this.props.locations);\n    };\n\n    _this.closeInfoWindow = function () {\n      // Disable any active marker animation\n      _this.state.activeMarker && _this.state.activeMarker.setAnimation(null);\n\n      _this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n        activeMarkerProps: null\n      });\n    };\n\n    _this.getFourSquareInfo = function (props, data) {\n      if (data.response != undefined ? data.response : \"No FourSquare data\") {\n        return data.response.venues.filter(function (item) {\n          return item.name.includes(props.name) || props.name.includes(item.name);\n        });\n      }\n\n      ;\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      // Close any info window already open\n      _this.closeInfoWindow(); // Get FS data coffeeshop\n\n\n      var url = \"https://api.foursquare.com/v2/venues/search?client_id=\".concat(FS_CLIENT, \"&client_secret=\").concat(FS_SECRET, \"&v=\").concat(FS_VERSION, \"&radius=100&ll=\").concat(props.position.lat, \",\").concat(props.position.lng, \"&llAcc=100\");\n      var headers = new Headers();\n      var request = new Request(url, {\n        method: 'GET',\n        headers: headers\n      }); // Create props for the active marker\n\n      var activeMarkerProps;\n      fetch(request).then(function (response) {\n        return response.json();\n      }).then(function (result) {\n        // Get just the business reference for the coffeeshop we want from FS\n        var coffeeshop = _this.getFourSquareInfo(props, result);\n\n        activeMarkerProps = _objectSpread({}, props, {\n          foursquare: coffeeshop[0]\n        }); // Get the list of images for the coffeeshop if there is FourSquare data\n        // Will finish setting state with the data we do have available\n\n        if (activeMarkerProps.foursquare) {\n          var _url = \"https://api.foursquare.com/v2/venues/\".concat(coffeeshop[0].id, \"/photos?client_id=\").concat(FS_CLIENT, \"&client_secret=\").concat(FS_SECRET, \"&v=\").concat(FS_VERSION);\n\n          fetch(_url).then(function (response) {\n            return response.json();\n          }).then(function (result) {\n            activeMarkerProps = _objectSpread({}, activeMarkerProps, {\n              images: result.response.photos\n            });\n            if (_this.state.activeMarker) _this.state.activeMarker.setAnimation(null);\n            marker.setAnimation(_this.props.google.maps.Animation.BOUNCE);\n\n            _this.setState({\n              showingInfoWindow: true,\n              activeMarker: marker,\n              activeMarkerProps: activeMarkerProps\n            });\n          }).catch(function (error) {\n            alert(\"error\" + error);\n          });\n        } else {\n          marker.setAnimation(_this.props.google.maps.Animation.BOUNCE);\n\n          _this.setState({\n            showingInfoWindow: true,\n            activeMarker: marker,\n            activeMarkerProps: activeMarkerProps\n          });\n        }\n      }).catch(function (error) {\n        alert(\"error\" + error);\n      });\n    };\n\n    _this.updateMarkers = function (locations) {\n      // bail out if all locations have been filtered\n      if (!locations) return; // remove any existing markers\n\n      _this.state.markers.forEach(function (marker) {\n        return marker.setMap(null);\n      }); //Go through each locations and creat marker props. Add markers.\n\n\n      var markerProps = [];\n      var markers = locations.map(function (location, index) {\n        var mProps = {\n          key: index,\n          index: index,\n          name: location.name,\n          position: location.pos,\n          url: location.url\n        };\n        markerProps.push(mProps);\n        var animation = _this.props.google.maps.Animation.DROP;\n        var marker = new _this.props.google.maps.Marker({\n          position: location.pos,\n          map: _this.state.map,\n          animation: animation\n        });\n        marker.addListener('click', function () {\n          _this.onMarkerClick(mProps, marker, null);\n        });\n        return marker;\n      });\n\n      _this.setState({\n        markers: markers,\n        markerProps: markerProps\n      });\n    };\n\n    _this.render = function () {\n      var style = {\n        width: '100%',\n        height: '100%'\n      };\n      var center = {\n        lat: _this.props.lat,\n        lng: _this.props.lon\n      };\n      var amProps = _this.state.activeMarkerProps;\n      return React.createElement(Map, {\n        role: \"application\",\n        \"aria-label\": \"map\",\n        onReady: _this.mapReady,\n        google: _this.props.google,\n        zoom: _this.props.zoom,\n        style: style,\n        initialCenter: center,\n        onClick: _this.closeInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(InfoWindow, {\n        marker: _this.state.activeMarker,\n        visible: _this.state.showingInfoWindow,\n        onClose: _this.closeInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, amProps && amProps.name), amProps && amProps.url ? React.createElement(\"a\", {\n        href: amProps.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"See website\") : \"\", amProps && amProps.images ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: amProps.name + \" food picture\",\n        src: amProps.images.items[0].prefix + \"100x100\" + amProps.images.items[0].suffix,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Image from Foursquare\")) : \"\")));\n    };\n\n    return _this;\n  }\n\n  return MapDisplay;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: MAP_KEY,\n  LoadingContainer: MapNotDisplayed\n})(MapDisplay);","map":{"version":3,"sources":["/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/src/components/MapDisplay.js"],"names":["React","Component","Map","InfoWindow","GoogleApiWrapper","MapNotDisplayed","MAP_KEY","FS_CLIENT","FS_SECRET","FS_VERSION","MapDisplay","state","map","markers","markerProps","activeMarker","activeMarkerProps","showingInfoWindow","componentDidMount","componentWillReceiveProps","props","setState","firstDrop","length","locations","closeInfoWindow","updateMarkers","selectedIndex","onMarkerClick","mapReady","setAnimation","getFourSquareInfo","data","response","undefined","venues","filter","item","name","includes","marker","e","url","position","lat","lng","headers","Headers","request","Request","method","fetch","then","json","result","coffeeshop","foursquare","id","images","photos","google","maps","Animation","BOUNCE","catch","error","alert","forEach","setMap","location","index","mProps","key","pos","push","animation","DROP","Marker","addListener","render","style","width","height","center","lon","amProps","zoom","items","prefix","suffix","apiKey","LoadingContainer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Map, InfoWindow, GoogleApiWrapper} from 'google-maps-react';\nimport MapNotDisplayed from './MapNotDisplayed';\n\nconst MAP_KEY = \"AIzaSyBi7tDyVzA7Ncf1kk-wCYxJrqDXd0qHUNs\";\nconst FS_CLIENT = \"430UINZRHZVRKNN3SUYH3TCKBNBFJTVJ2CDOCUGRETGYHWH\";\nconst FS_SECRET = \"MEL51JWGKO054COM0GQBLQ2RK1DJPNLUIPK5A4GH1CZCAWO2\";\nconst FS_VERSION = \"20180323\";\n\nclass MapDisplay extends Component {\n    state = {\n        map: null,\n        markers: [],\n        markerProps: [],\n        activeMarker: null,\n        activeMarkerProps: null,\n        showingInfoWindow: false\n    };\n\n    componentDidMount = () => {\n    }\n\n    componentWillReceiveProps = (props) => {\n      //only one initial marker drop\n      this.setState({firstDrop: false});\n\n      //change number of markers on map based on number of locations\n      if(this.state.markers.length !== props.locations.length) {\n        this.closeInfoWindow();\n        this.updateMarkers(props.locations);\n        this.setState({activeMarker: null});\n        return;\n      }\n      //close info window for no active marker\n      if (!props.selectedIndex || (this.state.activeMarker &&\n      (this.state.markers[props.selectedIndex] !== this.state.activeMarker))) {\n        this.closeInfoWindow();\n      }\n\n      //check for selected index\n      if (props.selectedIndex === null || typeof(props.selectedIndex) === \"undefined\") {\n        return;\n      };\n\n      this.onMarkerClick(this.state.markerProps[props.selectedIndex], this.state.markers[props.selectedIndex]);\n    }\n\n    mapReady = (props, map) => {\n        // prep location markers\n        this.setState({map});\n        this.updateMarkers(this.props.locations);\n    }\n\n    closeInfoWindow = () => {\n        // Disable any active marker animation\n        this.state.activeMarker && this\n            .state\n            .activeMarker\n            .setAnimation(null);\n        this.setState({showingInfoWindow: false, activeMarker: null, activeMarkerProps: null});\n    }\n\n    getFourSquareInfo = (props, data) => {\n      if (data.response != undefined? data.response:\"No FourSquare data\") {\n      return data\n           .response\n           .venues\n           .filter(item => item.name.includes(props.name) || props.name.includes(item.name));};\n    }\n\n    onMarkerClick = (props, marker, e) => {\n       // Close any info window already open\n       this.closeInfoWindow();\n\n       // Get FS data coffeeshop\n       let url = `https://api.foursquare.com/v2/venues/search?client_id=${FS_CLIENT}&client_secret=${FS_SECRET}&v=${FS_VERSION}&radius=100&ll=${props.position.lat},${props.position.lng}&llAcc=100`;\n       let headers = new Headers();\n       let request = new Request(url, {\n           method: 'GET',\n           headers\n       });\n\n       // Create props for the active marker\n       let activeMarkerProps;\n       fetch(request)\n           .then(response => response.json())\n           .then(result => {\n               // Get just the business reference for the coffeeshop we want from FS\n               let coffeeshop = this.getFourSquareInfo(props, result);\n               activeMarkerProps = {\n                   ...props,\n                   foursquare: coffeeshop[0]\n               };\n\n               // Get the list of images for the coffeeshop if there is FourSquare data\n               // Will finish setting state with the data we do have available\n               if (activeMarkerProps.foursquare) {\n                   let url = `https://api.foursquare.com/v2/venues/${coffeeshop[0].id}/photos?client_id=${FS_CLIENT}&client_secret=${FS_SECRET}&v=${FS_VERSION}`;\n                   fetch(url)\n                       .then(response => response.json())\n                       .then(result => {\n                           activeMarkerProps = {\n                               ...activeMarkerProps,\n                               images: result.response.photos\n                           };\n                           if (this.state.activeMarker)\n                               this.state.activeMarker.setAnimation(null);\n                           marker.setAnimation(this.props.google.maps.Animation.BOUNCE);\n                           this.setState({showingInfoWindow: true, activeMarker: marker, activeMarkerProps});\n                       })\n                       .catch(error =>  {\n                         alert(\"error\" + error)\n                       })\n               } else {\n                   marker.setAnimation(this.props.google.maps.Animation.BOUNCE);\n                   this.setState({showingInfoWindow: true, activeMarker: marker, activeMarkerProps});\n               }\n           })\n           .catch(error =>  {\n             alert(\"error\" + error)\n           })\n   }\n\n    updateMarkers = (locations) => {\n        // bail out if all locations have been filtered\n        if (!locations)\n            return;\n\n        // remove any existing markers\n        this\n            .state\n            .markers\n            .forEach(marker => marker.setMap(null));\n\n        //Go through each locations and creat marker props. Add markers.\n        let markerProps = [];\n        let markers = locations.map((location, index) => {\n            let mProps = {\n                key: index,\n                index,\n                name: location.name,\n                position: location.pos,\n                url: location.url\n            };\n            markerProps.push(mProps);\n\n            let animation = this.props.google.maps.Animation.DROP;\n            let marker = new this.props.google.maps.Marker({\n                position: location.pos,\n                map: this.state.map,\n                animation\n            });\n            marker.addListener('click', () => {\n                this.onMarkerClick(mProps, marker, null);\n            });\n            return marker;\n        })\n\n        this.setState({markers, markerProps});\n    }\n\n    render = () => {\n        const style = {\n            width: '100%',\n            height: '100%'\n        }\n        const center = {\n            lat: this.props.lat,\n            lng: this.props.lon\n        }\n        let amProps = this.state.activeMarkerProps;\n\n        return (\n            <Map\n                role=\"application\"\n                aria-label=\"map\"\n                onReady={this.mapReady}\n                google={this.props.google}\n                zoom={this.props.zoom}\n                style={style}\n                initialCenter={center}\n                onClick={this.closeInfoWindow}>\n                <InfoWindow\n                    marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}\n                    onClose={this.closeInfoWindow}>\n                    <div>\n                        <h3>{amProps && amProps.name}</h3>\n                        {amProps && amProps.url\n                            ? (\n                                <a href={amProps.url}>See website</a>\n                            )\n                            : \"\"}\n                        {amProps && amProps.images\n                            ? (\n                                <div><img\n                                    alt={amProps.name + \" food picture\"}\n                                    src={amProps.images.items[0].prefix + \"100x100\" + amProps.images.items[0].suffix}/>\n                                    <p>Image from Foursquare</p>\n                                </div>\n                            )\n                            : \"\"\n                        }\n                    </div>\n                </InfoWindow>\n            </Map>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({apiKey: MAP_KEY, LoadingContainer: MapNotDisplayed})(MapDisplay)\n"]},"metadata":{},"sourceType":"module"}