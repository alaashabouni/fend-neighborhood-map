{"ast":null,"code":"import _classCallCheck from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/src/components/MapDisplay.js\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nvar MAP_KEY = \"AIzaSyBIBjhLpE3-Z3Q8Pvz1m8z0uaYhl4SqBa4\";\n\nvar MapDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapDisplay, _Component);\n\n  function MapDisplay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapDisplay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      map: null,\n      markers: [],\n      markerProps: [],\n      activeMarker: null,\n      activeMarkerProps: null,\n      showingInfoWindow: false\n    };\n\n    _this.componentDidMount = function () {};\n\n    _this.mapReady = function (props, map) {\n      //save the map reference, and prepare makers\n      _this.setState({\n        map: map\n      });\n\n      _this.updateMarkers(_this.props.locations);\n    };\n\n    _this.closeInfoWindow = function () {\n      _this.state.activeMarker && _this.state.activeMarker.setAnimation(null);\n\n      _this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n        activeMarkerProps: null\n      });\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      //closes any currently open windows\n      _this.closeInfoWindow(); //show info for marker just clicked\n\n\n      _this.setState({\n        showingInfoWindow: true,\n        activeMarker: marker,\n        activeMarkerProps: props\n      });\n    };\n\n    _this.updateMarkers = function (locations) {\n      //if all locations are filtered, or array is not valid\n      if (!locations) return; //remove existing markers from the maps\n\n      _this.state.markers.forEach(function (marker) {\n        return marker.setMap(null);\n      }); //iterate over locations to create marker properties\n\n\n      var markerProps = [];\n      var markers = locations.map(function (location, index) {\n        var mProps = {\n          key: index,\n          index: index,\n          name: location.name,\n          position: location.pos,\n          url: location.url\n        };\n        markerProps.push(mProps);\n        var animation = _this.props.google.maps.Animation.DROP;\n        var marker = new _this.props.google.maps.Marker({\n          position: location.pos,\n          map: _this.state.map,\n          animation: animation\n        });\n        marker.addListener('click', function () {\n          _this.onMarkerClick(mProps, marker, null);\n        });\n        return marker;\n      });\n\n      _this.setState({\n        markers: markers,\n        markerProps: markerProps\n      });\n    };\n\n    _this.render = function () {\n      var style = {\n        width: '100%',\n        height: '100%'\n      };\n      var center = {\n        lat: _this.props.lat,\n        lng: _this.props.lon //why is there a differnce between lon and lng\n\n      };\n      var amProps = _this.state.activeMarkerProps;\n      return React.createElement(Map, {\n        role: \"application\",\n        \"aria-label\": \"map\",\n        onReady: _this.mapReady,\n        google: _this.props.google,\n        zoom: _this.props.zoom,\n        style: style,\n        initialCenter: center,\n        onClick: _this.closeInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(InfoWindow, {\n        marker: _this.state.activeMarker,\n        visible: _this.state.showingInfoWindow,\n        onClose: _this.closeInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"(amProps && amProps.name)\"), amProps && amProps.url ? React.createElement(\"a\", {\n        href: amProps.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Visit Website\") : \"\")));\n    };\n\n    return _this;\n  }\n\n  return MapDisplay;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: MAP_KEY\n})(MapDisplay);","map":{"version":3,"sources":["/Users/alaa.shabouni/Documents/Udacity/fend-neighborhood-map/src/components/MapDisplay.js"],"names":["React","Component","Map","InfoWindow","GoogleApiWrapper","MAP_KEY","MapDisplay","state","map","markers","markerProps","activeMarker","activeMarkerProps","showingInfoWindow","componentDidMount","mapReady","props","setState","updateMarkers","locations","closeInfoWindow","setAnimation","onMarkerClick","marker","e","forEach","setMap","location","index","mProps","key","name","position","pos","url","push","animation","google","maps","Animation","DROP","Marker","addListener","render","style","width","height","center","lat","lng","lon","amProps","zoom","apiKey"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Map, InfoWindow, GoogleApiWrapper} from 'google-maps-react'\n\nconst MAP_KEY = \"AIzaSyBIBjhLpE3-Z3Q8Pvz1m8z0uaYhl4SqBa4\";\n\nclass MapDisplay extends Component {\n  state = {\n    map: null,\n    markers: [],\n    markerProps: [],\n    activeMarker: null,\n    activeMarkerProps: null,\n    showingInfoWindow: false\n  };\n\n  componentDidMount = () => {\n  }\n\n  mapReady = (props, map) => {\n    //save the map reference, and prepare makers\n    this.setState({map});\n    this.updateMarkers(this.props.locations);\n  }\n\n  closeInfoWindow = () => {\n    this.state.activeMarker && this\n    .state\n    .activeMarker\n    .setAnimation(null);\n    this.setState({showingInfoWindow: false, activeMarker:null, activeMarkerProps: null});\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    //closes any currently open windows\n    this.closeInfoWindow ();\n    //show info for marker just clicked\n    this.setState({showingInfoWindow: true, activeMarker: marker, activeMarkerProps: props});\n  }\n\n  updateMarkers = (locations) => {\n    //if all locations are filtered, or array is not valid\n    if (!locations)\n      return;\n\n    //remove existing markers from the maps\n    this.state.markers.forEach(marker => marker.setMap(null));\n\n    //iterate over locations to create marker properties\n    let markerProps = [];\n    let markers = locations.map((location, index) => {\n      let mProps = {\n        key: index,\n        index,\n        name: location.name,\n        position: location.pos,\n        url: location.url\n      };\n      markerProps.push(mProps);\n\n      let animation = this.props.google.maps.Animation.DROP;\n      let marker = new this.props.google.maps.Marker ({\n        position: location.pos,\n        map: this.state.map,\n        animation\n      });\n      marker.addListener('click', () =>{\n        this.onMarkerClick(mProps, marker, null);\n      });\n      return marker;\n    });\n    this.setState({markers, markerProps});\n  }\n\n  render = () => {\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    const center = {\n      lat: this.props.lat,\n      lng: this.props.lon //why is there a differnce between lon and lng\n    }\n    let amProps = this.state.activeMarkerProps;\n\n    return (\n      <Map\n        role=\"application\"\n        aria-label=\"map\"\n        onReady={this.mapReady}\n        google={this.props.google}\n        zoom={this.props.zoom}\n        style={style}\n        initialCenter={center}\n        onClick={this.closeInfoWindow}>\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.closeInfoWindow}>\n          <div>\n            <h3>(amProps && amProps.name)</h3>\n            {amProps && amProps.url\n              ? (\n                <a href={amProps.url}>Visit Website</a>\n              )\n              : \"\"\n            }\n          </div>\n        </InfoWindow>\n      </Map>\n\n      )\n    }\n  }\n\nexport default GoogleApiWrapper({apiKey: MAP_KEY})(MapDisplay)\n"]},"metadata":{},"sourceType":"module"}